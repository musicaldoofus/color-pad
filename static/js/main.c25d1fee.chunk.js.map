{"version":3,"sources":["media/trash-icon.svg","media/share-icon.svg","helpers/paletteTemplate.js","components/organisms/Palette/index.js","components/molecules/Canvas/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","paletteTemplate","color","hex","rgb","id","CodeContainer","react_default","a","createElement","className","Component","ColorContainer","_ref","showCode","onClick","codeContainer","Palette_CodeContainer","c","style","backgroundColor","concat","Palette","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","colorContainers","code","toColorContainer","bind","assertThisInitialized","handleSelectColor","handleStrokeUpdate","setState","s","Palette_ColorContainer","assign","key","_this2","map","handleShowCodeUpdate","defaultValue","type","min","max","step","onChange","Canvas","isPainting","canvasRef","React","createRef","handleMouseDown","handleMouseMove","handleMouseUp","getCoords","drawAt","handleClear","handleShare","handleDismissShare","canvas","current","width","window","innerWidth","height","innerHeight","clientX","clientY","boundingRect","getBoundingClientRect","x","left","y","top","ctx","getContext","_this$getCoords","beginPath","fillStyle","ellipse","stroke","Math","PI","fill","_ref2","_ref3","clearRect","toDataURL","showShareUrl","react","src","trashIcon","alt","shareIcon","ref","onMouseDown","onMouseMove","onMouseUp","App","colorFocus","handleColorUpdate","target","value","organisms_Palette","molecules_Canvas","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c25d1fee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash-icon.bac2c831.svg\";","module.exports = __webpack_public_path__ + \"static/media/share-icon.0caf3e23.svg\";","const paletteTemplate = [\r\n\t{\r\n\t\tcolor: {\r\n\t\t\thex: 'f44336',\r\n\t\t\trgb: '(244, 67, 54)'\r\n\t\t},\r\n\t\tid: 0\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: 'FFEB3B',\r\n\t\t\trgb: '(255, 235, 59)'\r\n\t\t},\r\n\t\tid: 1\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: '2196F3',\r\n\t\t\trgb: '(33, 150, 243)'\r\n\t\t},\r\n\t\tid: 2\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: 'E91E63',\r\n\t\t\trgb: '(233, 30, 99)'\r\n\t\t},\r\n\t\tid: 3\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: '4CAF50',\r\n\t\t\trgb: '(76, 175, 80)'\r\n\t\t},\r\n\t\tid: 4\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: '009688',\r\n\t\t\trgb: '(0, 150, 136)'\r\n\t\t},\r\n\t\tid: 5\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: '9C27B0',\r\n\t\t\trgb: '(156, 39, 176)'\r\n\t\t},\r\n\t\tid: 6\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: 'FF9800',\r\n\t\t\trgb: '(255, 152, 0)'\r\n\t\t},\r\n\t\tid: 7\r\n\t}, {\r\n\t\tcolor: {\r\n\t\t\thex: 'FF5722',\r\n\t\t\trgb: '(255, 87, 34)'\r\n\t\t},\r\n\t\tid: 8\r\n\t},\r\n];\r\n export default paletteTemplate;","import React, { Component } from 'react';\r\nimport paletteTemplate from '../../../helpers/paletteTemplate';\r\nimport './Palette.css';\r\n\r\nclass CodeContainer extends Component {\r\n\trender() {\r\n\t\tconst codeDisplay = 'd';\r\n\t\treturn (\r\n\t\t\t<div className=\"code-container\">\r\n\t\t\t\t{codeDisplay}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst ColorContainer = ({color, showCode, onClick}) => {\r\n\tconst codeContainer = showCode ? <CodeContainer/> : null;\r\n\tconst c = color.color; //fix\r\n\treturn (\r\n\t\t<div className=\"color-container\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"color-individual\"\r\n\t\t\t\tstyle={{backgroundColor: `#${c.hex}`}}\r\n\t\t\t\tonClick={() => onClick(c)}\r\n\t\t\t></div>\r\n\t\t\t{codeContainer}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nclass Palette extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcolorContainers: paletteTemplate,\r\n\t\t\tcode: null\r\n\t\t};\r\n\t\tthis.toColorContainer = this.toColorContainer.bind(this);\r\n\t\t// this.handleInput = this.handleInput.bind(this);\r\n\t\tthis.handleSelectColor = this.handleSelectColor.bind(this);\r\n\t\tthis.handleStrokeUpdate = this.handleStrokeUpdate.bind(this);\r\n\t}\r\n\t\r\n\thandleShowCodeUpdate(code) {\r\n\t\tif (!code) this.setState({showCode: null});\r\n\t\telse this.setState({showCode: code});\r\n\t}\r\n\t\r\n\thandleStrokeUpdate(s) {\r\n\t\tthis.props.handleStrokeUpdate(s);\r\n\t}\r\n\t\r\n\ttoColorContainer(c) {\r\n\t\treturn <ColorContainer\r\n\t\t\tkey={c.id} {...c}\r\n\t\t\tcolor={c}\r\n\t\t\tshowCode={this.state.code}\r\n\t\t\tonClick={this.handleSelectColor}\r\n\t\t/>;\r\n\t}\r\n\t\r\n\thandleSelectColor(c) {\r\n\t\tthis.props.onClick(c);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst colorContainers = this.state.colorContainers.map(this.toColorContainer);\r\n\t\treturn (\r\n\t\t\t<div className=\"palette\">\r\n\t\t\t\t<div className=\"palette-header\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>Pick a color!</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"palette-button-container\">\r\n\t\t\t\t\t\t<button onClick={() => this.handleShowCodeUpdate()}>no code</button>\r\n\t\t\t\t\t\t<button onClick={() => this.handleShowCodeUpdate('hex')}>#hex</button>\r\n\t\t\t\t\t\t<button onClick={() => this.handleShowCodeUpdate('hex')}>rgb()</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"palette-size-buttons\">\r\n\t\t\t\t\t<input defaultValue=\"16\" type=\"range\" min=\"4\" max=\"64\" step=\"4\" onChange={this.handleStrokeUpdate}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"palette-colors\">\r\n\t\t\t\t\t<div className=\"color-containers\">\r\n\t\t\t\t\t\t{colorContainers}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Palette;","import React, { Component, Fragment } from 'react';\r\nimport trashIcon from '../../../media/trash-icon.svg';\r\nimport shareIcon from '../../../media/share-icon.svg';\r\nimport './Canvas.css';\r\n\r\nclass Canvas extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisPainting: false\r\n\t\t};\r\n\t\tthis.canvasRef = React.createRef();\r\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\r\n\t\tthis.handleMouseMove = this.handleMouseMove.bind(this);\r\n\t\tthis.handleMouseUp = this.handleMouseUp.bind(this);\r\n\t\tthis.getCoords = this.getCoords.bind(this);\r\n\t\tthis.drawAt = this.drawAt.bind(this);\r\n\t\tthis.handleClear = this.handleClear.bind(this);\r\n\t\tthis.handleShare = this.handleShare.bind(this);\r\n\t\tthis.handleDismissShare = this.handleDismissShare.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tconst canvas = this.canvasRef.current;\r\n\t\tcanvas.width = window.innerWidth;\r\n\t\tcanvas.height = window.innerHeight;\r\n\t}\r\n\t\r\n\tgetCoords(clientX, clientY) {\r\n\t\tconst canvas = this.canvasRef.current;\r\n\t\tconst boundingRect = canvas.getBoundingClientRect();\r\n\t\tconst x = clientX - boundingRect.left;\r\n\t\tconst y = clientY - boundingRect.top;\r\n\t\treturn {x, y};\r\n\t}\r\n\t\r\n\tdrawAt(clientX, clientY) {\r\n\t\tconst canvas = this.canvasRef.current;\r\n\t\tconst ctx = canvas.getContext('2d');\r\n\t\tlet {x, y} = this.getCoords(clientX, clientY);\r\n\t\tctx.beginPath();\r\n\t\tctx.fillStyle = `#${this.props.color.hex}`;\r\n\t\tctx.ellipse(x, y, this.props.stroke, this.props.stroke, 100, 0, 2 * Math.PI);\r\n\t\tctx.fill();\r\n\t}\t\r\n\t\r\n\thandleMouseUp({clientX, clientY}) {\r\n\t\tthis.setState({isPainting: false});\r\n\t\tthis.drawAt(clientX, clientY);\r\n\t}\r\n\t\r\n\thandleMouseMove({clientX, clientY}) {\r\n\t\tif (!this.state.isPainting) return;\r\n\t\telse this.drawAt(clientX, clientY);\r\n\t}\r\n\t\r\n\thandleMouseDown({clientX, clientY}) {\r\n\t\tthis.setState({isPainting: true});\r\n\t\tthis.drawAt(clientX, clientY);\r\n\t}\r\n\t\r\n\thandleClear() {\r\n\t\tconst canvas = this.canvasRef.current;\r\n\t\tconst ctx = canvas.getContext('2d');\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t}\r\n\t\r\n\thandleShare() {\r\n\t\tconst canvas = this.canvasRef.current;\r\n\t\tconst url = canvas.toDataURL();\r\n\t\tthis.setState({showShareUrl: true});\r\n\t\t\r\n\t}\r\n\t\r\n\thandleDismissShare() {\r\n\t\tthis.setState({showShareUrl: false});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"center-absolute\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>Draw on me!</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"header-icons\">\r\n\t\t\t\t\t\t<img src={trashIcon} alt=\"Clear the canvas\" onClick={this.handleClear}/>\r\n\t\t\t\t\t\t<img src={shareIcon} alt=\"Share your painting\" onClick={this.handleShare}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tstroke={this.props.stroke}\r\n\t\t\t\t\theight={window.innerHeight}\r\n\t\t\t\t\twidth={window.innerWidth}\r\n\t\t\t\t\tref={this.canvasRef}\r\n\t\t\t\t\tonMouseDown={this.handleMouseDown}\r\n\t\t\t\t\tonMouseMove={this.handleMouseMove}\r\n\t\t\t\t\tonMouseUp={this.handleMouseUp}\r\n\t\t\t\t/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Canvas;","import React, { Component } from 'react';\nimport Palette from './components/organisms/Palette';\nimport Canvas from './components/molecules/Canvas';\nimport paletteTemplate from './helpers/paletteTemplate';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstroke: 16,\n\t\t\tcolorFocus: paletteTemplate[0].color\n\t\t};\n\t\tthis.handleColorUpdate = this.handleColorUpdate.bind(this);\n\t\tthis.handleStrokeUpdate = this.handleStrokeUpdate.bind(this);\n\t}\n\t\n\thandleStrokeUpdate({target}) {\n\t\tthis.setState({stroke: target.value});\n\t}\n\t\n\thandleColorUpdate(c) {\n\t\tthis.setState({colorFocus: c});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Palette\n\t\t\t\t\tonClick={this.handleColorUpdate}\n\t\t\t\t\thandleStrokeUpdate={this.handleStrokeUpdate}\n\t\t\t\t/>\n\t\t\t\t<Canvas\n\t\t\t\t\tcolor={this.state.colorFocus}\n\t\t\t\t\tstroke={this.state.stroke}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}